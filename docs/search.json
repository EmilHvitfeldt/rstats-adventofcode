{
  "articles": [
    {
      "path": "2015.html",
      "title": "About this site",
      "description": "Some additional details about the website",
      "author": [],
      "contents": "\n\n\n.panel-tab {\n  flex: 1 0 20%;\n  text-align: center;\n}\n\n\nDay 1\nPart 1\n\n\ninput <- readLines(\"2015/01-input\")\nchars <- strsplit(input, \"\")[[1]]\n\nkey <- c(\"(\" = 1, \")\" = -1)\n\nsum(key[chars])\n\n\n\n\n[1] 74\n0.004 sec elapsed\n\nPart 2\n\n\ninput <- readLines(\"2015/01-input\")\nchars <- strsplit(input, \"\")[[1]]\n\nkey <- c(\"(\" = 1, \")\" = -1)\n\nmin(which(cumsum(key[chars]) < 0))\n\n\n\n\n[1] 1795\n0.003 sec elapsed\n\nDay 2\nPart 1\n\n\ninput <- readLines(\"2015/02-input\")\n\nchars <- strsplit(input, \"x\")\n\npackage_surface <- function(x) {\n  x <- as.numeric(x)\n  side <- x[1] * x[2]\n  front <- x[1] * x[3]\n  top <- x[2] * x[3]\n\n  sum(2 * c(side, front, top), min(side, front, top))\n}\n\nsum(vapply(chars, package_surface, numeric(1)))\n\n\n\n\n[1] 1606483\n0.073 sec elapsed\n\nPart 2\n\n\ninput <- readLines(\"2015/02-input\")\n\nchars <- strsplit(input, \"x\")\n\nribbon_length <- function(x) {\n  x <- as.numeric(x)\n  short_sides <- sort(x)[1:2]\n  sum(short_sides) * 2 + prod(x)\n}\n\nsum(vapply(chars, ribbon_length, numeric(1)))\n\n\n\n\n[1] 3842356\n0.072 sec elapsed\n\nDay 3\nPart 1\n\n\ninput <- readLines(\"2015/03-input\")\n\nchars <- strsplit(input, \"\")[[1]]\n\nx_key <- c(\"^\" = 0, \"v\" = 0, \">\" = 1, \"<\" = -1)\ny_key <- c(\"^\" = 1, \"v\" = -1, \">\" = 0, \"<\" = 0)\n\npath <- data.frame(\n  x = cumsum(x_key[chars]),\n  y = cumsum(y_key[chars])\n)\n\nnrow(unique(path))\n\n\n\n\n[1] 2565\n0.014 sec elapsed\n\nPart 2\n\n\ninput <- readLines(\"2015/03-input\")\n\nchars <- strsplit(input, \"\")[[1]]\n\npath_santa <- data.frame(\n  x = cumsum(x_key[chars][seq_along(chars) %% 2 == 1]),\n  y = cumsum(y_key[chars][seq_along(chars) %% 2 == 1])\n)\n\npath_robosanta <- data.frame(\n  x = cumsum(x_key[chars][seq_along(chars) %% 2 == 0]),\n  y = cumsum(y_key[chars][seq_along(chars) %% 2 == 0])\n)\n\nnrow(unique(rbind(path_santa, path_robosanta)))\n\n\n\n\n[1] 2639\n0.015 sec elapsed\n\nDay 4\nPart 1\n\n\ninput <- \"ckczppom\"\nnumber <- seq_len(1000000)\n\nmd5 <- digest::getVDigest()\n\nhash <- vapply(\n  paste0(input, number),\n  md5,\n  FUN.VALUE = character(1),\n  serialize = FALSE\n)\n\nwhich(substr(hash, 1, 5) == \"00000\")\n\n\n\n\nckczppom117946 \n        117946 \n10.697 sec elapsed\n\nPart 2\n\n\ninput <- \"ckczppom\"\nnumber <- seq(3000000, 4000000)\n\nmd5 <- digest::getVDigest()\n\nhash <- vapply(\n  paste0(input, number),\n  md5,\n  FUN.VALUE = character(1),\n  serialize = FALSE\n)\n\nwhich(substr(hash, 1, 6) == \"000000\")\n\n\n\n\nckczppom3938038 \n         938039 \n11.455 sec elapsed\n\nDay 5\nPart 1\n\n\ninput <- readLines(\"2015/05-input\")\n\ncon1 <- stringr::str_count(input, \"[aeiou]\") >= 3\n\nfind_repeat <- function(x) {\n  any(rle(x)$lengths > 1)\n}\n\ncon2 <- vapply(strsplit(input, \"\"), find_repeat, logical(1))\ncon3 <- !(grepl(\"ab\", input)) &\n  !(grepl(\"cd\", input)) &\n  !(grepl(\"pq\", input)) &\n  !(grepl(\"xy\", input))\n\nsum(con1 & con2 & con3)\n\n\n\n\n[1] 236\n0.464 sec elapsed\n\nPart 2\n\n\ninput <- readLines(\"2015/05-input\")\n\npairs <- tokenizers::tokenize_character_shingles(input, n = 2)\n\nx <- pairs[[1]]\n\ncon1_fun <- function(x) {\n  pairs <- names(which(table(x)>1))\n\n  if (length(pairs) == 0) return(FALSE)\n\n  for (i in seq_along(pairs)) {\n    if (any(diff(which(pairs[i] == x)) > 1)) return(TRUE)\n  }\n\n  FALSE\n}\n\ncon1 <- vapply(pairs, con1_fun, FUN.VALUE = logical(1))\n\ntriplets <- tokenizers::tokenize_character_shingles(input, n = 3)\n\ncon2_fun <- function(x) {\n  any(substr(x, 1, 1) == substr(x, 3, 3))\n}\n\ncon2 <- vapply(triplets, con2_fun, FUN.VALUE = logical(1))\n\nsum(con1 & con2)\n\n\n\n\n[1] 50\n1.57 sec elapsed\n\nDay 6\nPart 1\n\n\ninput <- readLines(\"2015/06-input\")\n\nmat <- matrix(FALSE, 1000, 1000)\n\nfor (direction in input) {\n  coord <- stringr::str_extract_all(direction, \"[0-9]+\")[[1]]\n  coord <- as.numeric(coord) + 1\n\n  command <- stringr::str_extract(direction, \"(turn on|toggle|turn off)\")\n\n  x_range <- coord[1]:coord[3]\n  y_range <- coord[2]:coord[4]\n\n  if (command == \"toggle\") {\n    mat[x_range, y_range] <-!mat[x_range, y_range]\n  } else if (command == \"turn on\") {\n    mat[x_range, y_range] <- TRUE\n  } else if (command == \"turn off\") {\n    mat[x_range, y_range] <- FALSE\n  }\n}\n\nsum(mat)\n\n\n\n\n[1] 569999\n0.105 sec elapsed\n\nPart 2\n\n\ninput <- readLines(\"2015/06-input\")\n\nmat <- matrix(0, 1000, 1000)\n\nfor (direction in input) {\n  coord <- stringr::str_extract_all(direction, \"[0-9]+\")[[1]]\n  coord <- as.numeric(coord) + 1\n\n  command <- stringr::str_extract(direction, \"(turn on|toggle|turn off)\")\n\n  x_range <- coord[1]:coord[3]\n  y_range <- coord[2]:coord[4]\n\n  if (command == \"toggle\") {\n    mat[x_range, y_range] <- mat[x_range, y_range] + 2\n  } else if (command == \"turn on\") {\n    mat[x_range, y_range] <- mat[x_range, y_range] + 1\n  } else if (command == \"turn off\") {\n    mat[x_range, y_range] <- pmax(mat[x_range, y_range] - 1, 0)\n  }\n}\n\nsum(mat)\n\n\n\n\n[1] 17836115\n0.445 sec elapsed\n\nDay 7\nPart 1\n\n\nlibrary(magrittr)\nlibrary(stringr)\n\ninput <- readLines(\"2015/07-input\")\n\nint_2_16 <- function(x) {\n  as.logical(intToBits(x)[1:16])\n}\n\nint_2_16_rev <- function(x) {\n  sum(2 ^ (0:15) * x)\n}\n\n`%AND%` <- function(x, y) {\n  int_2_16_rev(int_2_16(x) & int_2_16(y))\n}\n\n`%OR%` <- function(x, y) {\n  int_2_16_rev(int_2_16(x) | int_2_16(y))\n}\n\n`%LSHIFT%` <- function(x, y) {\n  int_2_16_rev(c(rep(FALSE, y), int_2_16(x)[seq(1, 16 - y)]))\n}\n\n`%RSHIFT%` <- function(x, y) {\n  int_2_16_rev(c(int_2_16(x)[seq(y + 1, 16)], rep(FALSE, y)))\n}\n\n`%NOT%` <- function(temp, x) {\n  int_2_16_rev(!int_2_16(x))\n}\n\neval_fun <- function(x) {\n  as.character(eval(parse(text = x)))\n}\n\ninstructions <- strsplit(input, \" -> \")\n\nlhs <- purrr::map_chr(instructions, ~.x[1]) %>%\n  str_replace_all(\n    c(\n      \"OR\" = \"%OR%\",\n      \"AND\" = \"%AND%\",\n      \"RSHIFT\" = \"%RSHIFT%\",\n      \"LSHIFT\" = \"%LSHIFT%\",\n      \"NOT\" = \"1 %NOT%\"\n    )\n  ) %>%\n  paste0(\"( \", ., \" )\")\n\nlhs[which(str_detect(lhs, \"^\\\\( [0-9]* \\\\)$\"))] <- str_extract(\n  lhs[which(str_detect(lhs, \"^\\\\( [0-9]* \\\\)$\"))],\n  \"[0-9]+\"\n)\n\nrhs <- purrr::map_chr(instructions, ~.x[2])\n\nrepeat {\n  numbers_ind <- which(str_detect(lhs, \"^[0-9]*$\"))\n\n  if (length(numbers_ind) == length(lhs)) break\n\n  replacement <- str_extract(lhs[numbers_ind], \"[0-9]+\")\n  names(replacement) <- paste0(\" \", rhs[numbers_ind], \" \")\n\n  lhs <- lhs %>%\n    str_replace_all(replacement)\n\n  can_evaluate <- !lhs %>% str_detect(\"[a-z]+\")\n\n  lhs[can_evaluate] <- purrr::map_chr(lhs[can_evaluate], eval_fun)\n}\n\nlhs[rhs == \"a\"]\n\n\n\n\n[1] \"956\"\n4.362 sec elapsed\n\nPart 2\n\n\nlibrary(magrittr)\nlibrary(stringr)\n\ninput <- readLines(\"2015/07-input\")\n\nint_2_16 <- function(x) {\n  as.logical(intToBits(x)[1:16])\n}\n\nint_2_16_rev <- function(x) {\n  sum(2 ^ (0:15) * x)\n}\n\n`%AND%` <- function(x, y) {\n  int_2_16_rev(int_2_16(x) & int_2_16(y))\n}\n\n`%OR%` <- function(x, y) {\n  int_2_16_rev(int_2_16(x) | int_2_16(y))\n}\n\n`%LSHIFT%` <- function(x, y) {\n  int_2_16_rev(c(rep(FALSE, y), int_2_16(x)[seq(1, 16 - y)]))\n}\n\n`%RSHIFT%` <- function(x, y) {\n  int_2_16_rev(c(int_2_16(x)[seq(y + 1, 16)], rep(FALSE, y)))\n}\n\n`%NOT%` <- function(temp, x) {\n  int_2_16_rev(!int_2_16(x))\n}\n\neval_fun <- function(x) {\n  as.character(eval(parse(text = x)))\n}\n\n\ninstructions <- strsplit(input, \" -> \")\n\nlhs <- purrr::map_chr(instructions, ~.x[1]) %>%\n  str_replace_all(\n    c(\n      \"OR\" = \"%OR%\",\n      \"AND\" = \"%AND%\",\n      \"RSHIFT\" = \"%RSHIFT%\",\n      \"LSHIFT\" = \"%LSHIFT%\",\n      \"NOT\" = \"1 %NOT%\"\n    )\n  ) %>%\n  paste0(\"( \", ., \" )\")\n\nlhs[which(str_detect(lhs, \"^\\\\( [0-9]* \\\\)$\"))] <- str_extract(\n  lhs[which(str_detect(lhs, \"^\\\\( [0-9]* \\\\)$\"))],\n  \"[0-9]+\"\n)\n\nrhs <- purrr::map_chr(instructions, ~.x[2])\n\nlhs[rhs == \"b\"] <- \"956\"\n\nrepeat {\n  numbers_ind <- which(str_detect(lhs, \"^[0-9]*$\"))\n\n  if (length(numbers_ind) == length(lhs)) break\n\n  replacement <- str_extract(lhs[numbers_ind], \"[0-9]+\")\n  names(replacement) <- paste0(\" \", rhs[numbers_ind], \" \")\n\n  lhs <- lhs %>%\n    str_replace_all(replacement)\n\n  can_evaluate <- !lhs %>% str_detect(\"[a-z]+\")\n\n  lhs[can_evaluate] <- purrr::map_chr(lhs[can_evaluate], eval_fun)\n}\n\nlhs[rhs == \"a\"]\n\n\n\n\n[1] \"40149\"\n4.255 sec elapsed\n\nDay 8\nPart 1\n\n\ninput <- readLines(\"2015/08-input\")\n\nsum(purrr::map_int(input, nchar)) -\n  sum(purrr::map_int(input, ~nchar(eval(parse(text = .x)), type = \"bytes\")))\n\n\n\n\n[1] 1333\n0.009 sec elapsed\n\nPart 2\n\n\ninput <- readLines(\"2015/08-input\")\n\nsum(purrr::map_int(stringi::stri_escape_unicode(input), nchar) + 2) -\n  sum(purrr::map_int(input, nchar))\n\n\n\n\n[1] 2046\n0.003 sec elapsed\n\nDay 9\nPart 1\n\n\ninput <- readLines(\"2015/09-input\")\n\nlibrary(dplyr)\nlibrary(tidyr)\n\ninput_tbl <- tibble(input) %>%\n  separate(input, c(\"destinations\", \"distance\"), \" = \", convert = TRUE) %>%\n  separate(destinations, c(\"to\", \"from\"), \" to \")\n\nall_paths <- input_tbl %>%\n  select(-distance) %>%\n  unlist() %>%\n  unique() %>%\n  combinat::permn()\n\ndistances <- bind_rows(\n  input_tbl,\n  input_tbl %>% rename(from = to, to = from)\n)\n\ncalc_distance <- function(x) {\n  tibble(\n    from = x[-length(x)],\n    to = x[-1]\n  ) %>%\n    left_join(distances, by = c(\"from\", \"to\")) %>%\n    summarise(sum = sum(distance)) %>%\n    pull(sum)\n}\n\npurrr::map_int(all_paths, calc_distance) %>%\n  min()\n\n\n\n\n[1] 207\n180.566 sec elapsed\n\nPart 2\n\n\ninput <- readLines(\"2015/09-input\")\n\nlibrary(dplyr)\nlibrary(tidyr)\n\ninput_tbl <- tibble(input) %>%\n  separate(input, c(\"destinations\", \"distance\"), \" = \", convert = TRUE) %>%\n  separate(destinations, c(\"to\", \"from\"), \" to \")\n\nall_paths <- input_tbl %>%\n  select(-distance) %>%\n  unlist() %>%\n  unique() %>%\n  combinat::permn()\n\ndistances <- bind_rows(\n  input_tbl,\n  input_tbl %>% rename(from = to, to = from)\n)\n\ncalc_distance <- function(x) {\n  tibble(\n    from = x[-length(x)],\n    to = x[-1]\n  ) %>%\n    left_join(distances, by = c(\"from\", \"to\")) %>%\n    summarise(sum = sum(distance)) %>%\n    pull(sum)\n}\n\npurrr::map_int(all_paths, calc_distance) %>%\n  max()\n\n\n\n\n[1] 804\n184.788 sec elapsed\n\nDay 10\nPart 1\n\n\ninput <- \"1113122113\"\n\nlook_and_say <- function(x) {\n  x <- strsplit(x, \"\")[[1]]\n  x <- rle(x)\n  x <- unlist(x)\n  x <- matrix(x, nrow = 2, byrow = TRUE)\n  x <- as.numeric(x)\n  paste0(x, collapse = \"\")\n}\n\nfor (i in seq_len(40)) {\n  input <- look_and_say(input)\n}\n\nnchar(input)\n\n\n\n\n[1] 360154\n1.686 sec elapsed\n\nPart 2\n\n\ninput <- \"1113122113\"\n\nlook_and_say <- function(x) {\n  x <- strsplit(x, \"\")[[1]]\n  x <- rle(x)\n  x <- unlist(x)\n  x <- matrix(x, nrow = 2, byrow = TRUE)\n  x <- as.numeric(x)\n  paste0(x, collapse = \"\")\n}\n\nfor (i in seq_len(50)) {\n  input <- look_and_say(input)\n}\nnchar(input)\n\n\n\n\n[1] 5103798\n26.33 sec elapsed\n\nDay 11\nPart 1\n\n\ninput <- \"hxbxwxba\"\n\npass <- match(strsplit(input, \"\")[[1]], letters)\n\nincrement0 <- function(x, i) {\n\n  x[i] <- x[i] + 1\n\n  if (any(x %in% c(9, 15, 12))) {\n\n    which_min <- min(which(x %in% c(9, 15, 12)))\n\n    x[which_min] <- x[which_min] + 1\n    if (which_min < 8) {\n      x[seq(min(which_min + 1, 8), 8)] <- 1\n    }\n  }\n\n  if (x[i] == 27) {\n\n    x[i] <- 1\n    if (i > 1) {\n      x <- increment0(x, i - 1)\n    }\n\n  }\n  x\n}\n\nchecker <- function(x) {\n  rle1 <- rle(diff(x))\n\n  check1 <- any(rle1$lengths[rle1$values == 1] >= 2)\n  check2 <- all(!c(9, 15, 12) %in% x)\n  check3 <- sum(rle(x)$lengths >= 2) >= 2\n\n  check1 & check2 & check3\n}\n\nrepeat {\n  pass <- increment0(pass, 8)\n  if (checker(pass)) break\n}\n\npaste0(letters[pass], collapse = \"\")\n\n\n\n\n[1] \"hxbxxyzz\"\n1.413 sec elapsed\n\nPart 2\n\n\ninput <- \"hxbxxyzz\" # My answer from Part 1\n\npass <- match(strsplit(input, \"\")[[1]], letters)\n\nincrement0 <- function(x, i) {\n\n  x[i] <- x[i] + 1\n\n  if (any(x %in% c(9, 15, 12))) {\n\n    which_min <- min(which(x %in% c(9, 15, 12)))\n\n    x[which_min] <- x[which_min] + 1\n    if (which_min < 8) {\n      x[seq(min(which_min + 1, 8), 8)] <- 1\n    }\n  }\n\n  if (x[i] == 27) {\n\n    x[i] <- 1\n    if (i > 1) {\n      x <- increment0(x, i - 1)\n    }\n\n  }\n  x\n}\n\nchecker <- function(x) {\n  rle1 <- rle(diff(x))\n\n  check1 <- any(rle1$lengths[rle1$values == 1] >= 2)\n  check2 <- all(!c(9, 15, 12) %in% x)\n  check3 <- sum(rle(x)$lengths >= 2) >= 2\n\n  check1 & check2 & check3\n}\n\nruns <- 0\n\nrepeat {\n  pass <- increment0(pass, 8)\n  if (checker(pass)) break\n}\n\npaste0(letters[pass], collapse = \"\")\n\n\n\n\n[1] \"hxcaabcc\"\n49.519 sec elapsed\n\nDay 12\nPart 1\n\n\ninput <- readLines(\"2015/12_input\")\nnumbers <- stringr::str_extract_all(input, pattern = \"-{0,1}[0-9]+\")[[1]]\n\nsum(as.numeric(numbers))\n\n\n\n\n[1] 156366\n0.007 sec elapsed\n\nPart 2\n\n\ninput <- readLines(\"2015/12_input\")\n\nlibrary(stringr)\n\ncheck_red <- function(x) {\n  if (length(x) > 1) return(FALSE)\n\n  if (is.list(x)) return(FALSE)\n\n  x == \"red\"\n}\n\nparse_red <- function(input) {\n  repeat {\n    end <- str_locate(input, \"\\\\}\")[1, 1]\n\n    if (all(is.na(end))) break\n\n    starts <- str_locate_all(input, \"\\\\{\")[[1]][, 1]\n    start <- max(starts[starts < end])\n\n    extraction <- str_sub(input, start, end)\n\n    json <- jsonlite::parse_json(extraction)\n\n    if (!any(purrr::map_lgl(json, check_red))) {\n      res <- str_extract_all(extraction, \"-{0,1}[0-9]+\")[[1]]\n      res <- sum(as.numeric(res), na.rm = TRUE)\n    } else {\n      res <- 0\n    }\n\n    str_sub(input, start, end) <- res\n  }\n\n  res <- str_extract_all(input, \"-{0,1}[0-9]+\")[[1]]\n  res <- sum(as.numeric(res), na.rm = TRUE)\n  res\n}\n\nparse_red(input)\n\n\n\n\n[1] 96852\n0.341 sec elapsed\n\nDay 13\nPart 1\n\n\ninput <- readLines(\"2015/13-input\")\n\nlibrary(dplyr)\nlibrary(stringr)\n\nfrom <- str_extract(input, \"\\\\w*\")\nto <- str_extract(input, \"\\\\w*\\\\.$\")\nto <- str_remove(to, \"\\\\.\")\nhappiness <- as.numeric(str_extract(input, \"[0-9]+\"))\nnegative <- str_detect(input, \"lose\")\n\ninput_df <- data.frame(\n  from,\n  to,\n  happiness = happiness * ifelse(negative, -1, 1)\n)\n\nall_perms <- combinat::permn(unique(from), m = length(unique(from)))\n\ntable_happiness <- function(x) {\n  seq_x <- seq_along(x)\n  len_x <- length(x)\n\n  data.frame(\n    from = c(x, x),\n    to = c(x[c(seq_x[-1], 1)], x[c(len_x, seq_x[-len_x])])\n  ) %>%\n    left_join(input_df, by = c(\"from\", \"to\")) %>%\n    summarize(sum = sum(happiness, na.rm = TRUE)) %>%\n    pull(sum)\n}\n\nperm_values <- vapply(all_perms, table_happiness, numeric(1))\nmax(perm_values)\n\n\n\n\n[1] 664\n145.439 sec elapsed\n\nPart 2\n\n\ninput <- readLines(\"2015/13-input\")\n\nlibrary(dplyr)\nlibrary(stringr)\n\nfrom <- str_extract(input, \"\\\\w*\")\nto <- str_extract(input, \"\\\\w*\\\\.$\")\nto <- str_remove(to, \"\\\\.\")\nhappiness <- as.numeric(str_extract(input, \"[0-9]+\"))\nnegative <- str_detect(input, \"lose\")\n\ninput_df <- data.frame(\n  from,\n  to,\n  happiness = happiness * ifelse(negative, -1, 1)\n)\n\ntable_happiness <- function(x) {\n  seq_x <- seq_along(x)\n  len_x <- length(x)\n\n  data.frame(\n    from = c(x, x),\n    to = c(x[c(seq_x[-1], 1)], x[c(len_x, seq_x[-len_x])])\n  ) %>%\n    left_join(input_df, by = c(\"from\", \"to\")) %>%\n    summarize(sum = sum(happiness, na.rm = TRUE)) %>%\n    pull(sum)\n}\n\nnew_from <- c(unique(from), \"me\")\nnew_perms <- combinat::permn(unique(new_from), m = length(unique(new_from)))\nperm_values <- vapply(new_perms, table_happiness, numeric(1))\nmax(perm_values)\n\n\n\n\n[1] 640\n1110.335 sec elapsed\n\nDay 14\nPart 1\n\n\ninput <- readLines(\"2015/14-input\")\n\nlibrary(stringr)\nlibrary(purrr)\n\nflying_distance <- function(speed, speed_dur, rest_dur, time) {\n  sum(rep(c(rep(speed, speed_dur), rep(0, rest_dur)), length.out = time))\n}\n\nnumbers <- str_extract_all(input, \"[0-9]+\")\nnumbers <- map(numbers, as.numeric)\nnames(numbers) <- str_extract(input, \"\\\\w*\")\n\nditances <- map_dbl(numbers, ~ flying_distance(.x[1], .x[2], .x[3], 2503))\nsort(ditances, decreasing = TRUE)[1]\n\n\n\n\nCupid \n 2696 \n0.019 sec elapsed\n\nPart 2\n\n\ninput <- readLines(\"2015/14-input\")\n\nlibrary(stringr)\nlibrary(purrr)\nlibrary(dplyr)\n\nflying_distance_cumsum <- function(speed, speed_dur, rest_dur, time) {\n  cumsum(rep(c(rep(speed, speed_dur), rep(0, rest_dur)), length.out = time))\n}\n\nnumbers <- str_extract_all(input, \"[0-9]+\")\nnumbers <- map(numbers, as.numeric)\nnames(numbers) <- str_extract(input, \"\\\\w*\")\n\nditances <- map2_dfr(\n  numbers,\n  names(numbers),\n  ~ data.frame(\n      location = flying_distance_cumsum(.x[1], .x[2], .x[3], 2503),\n      time = seq_len(2503),\n      reindeer = .y\n    )\n)\n\nditances %>%\n  group_by(time) %>%\n  slice_max(location, n = 1) %>%\n  ungroup() %>%\n  count(reindeer, sort = TRUE)\n\n\n\n\n# A tibble: 7 × 2\n  reindeer     n\n  <chr>    <int>\n1 Rudolph   1084\n2 Cupid      838\n3 Donner     277\n4 Dancer     199\n5 Comet      121\n6 Prancer     24\n7 Vixen       13\n0.394 sec elapsed\n\nDay 15\nPart 1\n\n\nlibrary(dplyr)\n\n# Hand imported input\nvalues <- list(\n  Sprinkles =    c(capacity = 5, durability =-1, flavor = 0, texture = 0, calories = 5),\n  PeanutButter = c(capacity =-1, durability = 3, flavor = 0, texture = 0, calories = 1),\n  Frosting =     c(capacity = 0, durability =-1, flavor = 4, texture = 0, calories = 6),\n  Sugar =        c(capacity =-1, durability = 0, flavor = 0, texture = 2, calories = 8)\n)\n\nfourway_sum <- function(n) {\n  expand.grid(Sprinkles = 0:100,\n              PeanutButter = 0:100,\n              Frosting = 0:100) %>%\n    filter(Sprinkles + PeanutButter + Frosting == n) %>%\n    mutate(Sugar = 100 - n)\n}\n\ncombinations <- purrr::map_dfr(0:100, fourway_sum)\n\nbatter_mizer <- function(Sprinkles, PeanutButter, Frosting, Sugar) {\n  sum <- values[[\"Sprinkles\"]] * Sprinkles +\n         values[[\"PeanutButter\"]] * PeanutButter +\n         values[[\"Frosting\"]] * Frosting +\n         values[[\"Sugar\"]] * Sugar\n\n  sum <- pmax(sum, 0)\n\n  prod(sum[1:4])\n}\n\nres <- purrr::pmap_dbl(combinations, batter_mizer)\nmax(res)\n\n\n\n\n[1] 13882464\n8.405 sec elapsed\n\nPart 2\n\n\nlibrary(dplyr)\n\n# Hand imported input\nvalues <- list(\n  Sprinkles =    c(capacity = 5, durability =-1, flavor = 0, texture = 0, calories = 5),\n  PeanutButter = c(capacity =-1, durability = 3, flavor = 0, texture = 0, calories = 1),\n  Frosting =     c(capacity = 0, durability =-1, flavor = 4, texture = 0, calories = 6),\n  Sugar =        c(capacity =-1, durability = 0, flavor = 0, texture = 2, calories = 8)\n)\n\nbatter_mizer_500_cal <- function(Sprinkles, PeanutButter, Frosting, Sugar) {\n  sum <- values[[\"Sprinkles\"]] * Sprinkles +\n    values[[\"PeanutButter\"]] * PeanutButter +\n    values[[\"Frosting\"]] * Frosting +\n    values[[\"Sugar\"]] * Sugar\n\n  sum <- pmax(sum, 0)\n\n  if (sum[5] != 500) return(0)\n\n  prod(sum[1:4])\n}\n\nres <- purrr::pmap_dbl(combinations, batter_mizer_500_cal)\nmax(res)\n\n\n\n\n[1] 11171160\n2.97 sec elapsed\n\nDay 16\nPart 1\n\n\nlibrary(magrittr)\nlibrary(stringr)\nlibrary(dplyr)\nlibrary(tidyr)\n\ninput <- readLines(\"2015/16-input\")\n\nsues <- input %>%\n  str_remove(\"^Sue [0-9]*: \")\n\nthings <- sues %>%\n  str_remove_all(\": [0-9]*\") %>%\n  str_split(\", \") %>%\n  unlist()\n\nvalues <- sues %>%\n  str_extract_all(\"[0-9]+\") %>%\n  unlist() %>%\n  as.numeric()\n\ntibble(sue = rep(seq_len(length(input)), each = 3),\n       things, values) %>%\n  pivot_wider(names_from = things,values_from = values) %>%\n  filter(\n    children == 3 | is.na(children),\n    cats == 7 | is.na(cats),\n    samoyeds == 2 | is.na(samoyeds),\n    pomeranians == 3 | is.na(pomeranians),\n    akitas == 0 | is.na(akitas),\n    vizslas == 0 | is.na(vizslas),\n    goldfish == 5 | is.na(goldfish),\n    trees == 3 | is.na(trees),\n    cars == 2 | is.na(cars),\n    perfumes == 1 | is.na(perfumes)\n  )\n\n\n\n\n# A tibble: 1 × 11\n    sue goldfish trees akitas  cars perfumes vizslas children  cats\n  <int>    <dbl> <dbl>  <dbl> <dbl>    <dbl>   <dbl>    <dbl> <dbl>\n1   103        5    NA     NA     2        1      NA       NA    NA\n# … with 2 more variables: pomeranians <dbl>, samoyeds <dbl>\n0.033 sec elapsed\n\nPart 2\n\n\nlibrary(magrittr)\nlibrary(stringr)\nlibrary(dplyr)\nlibrary(tidyr)\n\ninput <- readLines(\"2015/16-input\")\n\nsues <- input %>%\n  str_remove(\"^Sue [0-9]*: \")\n\nthings <- sues %>%\n  str_remove_all(\": [0-9]*\") %>%\n  str_split(\", \") %>%\n  unlist()\n\nvalues <- sues %>%\n  str_extract_all(\"[0-9]+\") %>%\n  unlist() %>%\n  as.numeric()\n\ntibble(sue = rep(seq_len(length(input)), each = 3),\n       things, values) %>%\n  pivot_wider(names_from = things,values_from = values) %>%\n  filter(\n    children == 3 | is.na(children),\n    cats > 7 | is.na(cats),\n    samoyeds == 2 | is.na(samoyeds),\n    pomeranians < 3 | is.na(pomeranians),\n    akitas == 0 | is.na(akitas),\n    vizslas == 0 | is.na(vizslas),\n    goldfish < 5 | is.na(goldfish),\n    trees > 3 | is.na(trees),\n    cars == 2 | is.na(cars),\n    perfumes == 1 | is.na(perfumes)\n  )\n\n\n\n\n# A tibble: 1 × 11\n    sue goldfish trees akitas  cars perfumes vizslas children  cats\n  <int>    <dbl> <dbl>  <dbl> <dbl>    <dbl>   <dbl>    <dbl> <dbl>\n1   405       NA     8     NA     2        1      NA       NA    NA\n# … with 2 more variables: pomeranians <dbl>, samoyeds <dbl>\n0.032 sec elapsed\n\nDay 17\nPart 1\n\n\ninput <- readLines(\"2015/17-input\")\n\ninput <- as.numeric(input)\n\nall_sets <- expand.grid(purrr::map(seq_along(input), ~c(F, T)))\n\nmatrix_vals <- t(t(as.matrix(all_sets)) * input)\n\nsum(rowSums(matrix_vals) == 150)\n\n\n\n\n[1] 654\n1.143 sec elapsed\n\nPart 2\n\n\ninput <- readLines(\"2015/17-input\")\n\ninput <- as.numeric(input)\n\nall_sets <- expand.grid(purrr::map(seq_along(input), ~c(F, T)))\n\nmatrix_vals <- t(t(as.matrix(all_sets)) * input)\n\nnum_containers <- rowSums(matrix_vals[rowSums(matrix_vals) == 150, ] > 0)\n\ntable(num_containers)[1]\n\n\n\n\n 4 \n57 \n0.701 sec elapsed\n\nDay 18\nPart 1\n\n\ninput <- readLines(\"2015/18-input\")\n\nlibrary(magrittr)\n\nmat <- strsplit(input, \"\") %>%\n  purrr::map(~.x == \"#\") %>%\n  Reduce(rbind, .)\n\nrownames(mat) <- NULL\n\nmat_update <- matrix(NA, nrow = nrow(mat), ncol = ncol(mat))\n\nmax_row <- nrow(mat)\nmax_col <- ncol(mat)\n\nfor (i in seq_len(100)) {\n  for (row in seq_len(nrow(mat_update))) {\n    for (col in seq_len(ncol(mat_update))) {\n\n      keep <- mat[row, col]\n\n      mat[row, col] <- NA\n\n      neighbors <- sum(na.rm = TRUE,\n                       mat[\n                         seq(max(row - 1, 1), min(row + 1, max_row)),\n                         seq(max(col - 1, 1), min(col + 1, max_col))\n                       ]\n      )\n\n      if (keep) {\n        mat_update[row, col] <- neighbors %in% c(2, 3)\n      } else {\n        mat_update[row, col] <- neighbors == 3\n      }\n\n      mat[row, col] <- keep\n\n    }\n  }\n\n  mat <- mat_update\n}\n\nsum(mat)\n\n\n\n\n[1] 814\n13.559 sec elapsed\n\nPart 2\n\n\ninput <- readLines(\"2015/18-input\")\nlibrary(magrittr)\n\nmat <- strsplit(input, \"\") %>%\n  purrr::map(~.x == \"#\") %>%\n  Reduce(rbind, .)\n\nrownames(mat) <- NULL\n\nmat_update <- matrix(TRUE, nrow = nrow(mat), ncol = ncol(mat))\n\nmax_row <- nrow(mat)\nmax_col <- ncol(mat)\n\nmat[1, 1] <- TRUE\nmat[1, max_col] <- TRUE\nmat[max_row, 1] <- TRUE\nmat[max_row, max_col] <- TRUE\n\nfor (i in seq_len(100)) {\n  for (row in seq_len(nrow(mat_update))) {\n    for (col in seq_len(ncol(mat_update))) {\n\n      if ((row == 1 & col == 1) |\n          (row == 1 & col == max_col) |\n          (row == max_row & col == 1) |\n          (row == max_row & col == max_col)) next\n\n      keep <- mat[row, col]\n\n      mat[row, col] <- NA\n\n      neighbors <- sum(na.rm = TRUE,\n                       mat[\n                         seq(max(row - 1, 1), min(row + 1, max_row)),\n                         seq(max(col - 1, 1), min(col + 1, max_col))\n                       ]\n      )\n\n      if (keep) {\n        mat_update[row, col] <- neighbors %in% c(2, 3)\n      } else {\n        mat_update[row, col] <- neighbors == 3\n      }\n\n      mat[row, col] <- keep\n\n    }\n  }\n\n  mat <- mat_update\n}\n\nsum(mat)\n\n\n\n\n[1] 924\n15.241 sec elapsed\n\nDay 19\nPart 1\n\n\ninput <- readLines(\"2015/19-input\")\n\nmolecules <- input[length(input)]\n\nkey <- input[-length(input)]\nkey <- key[key != \"\"]\n\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(stringr)\n\nkey_tbl <- tibble(key) %>%\n  separate(key, c(\"from\", \"to\"), \" => \")\n\nkeys <- split(key_tbl$to, key_tbl$from)\n\nres <- character()\n\nfor (k in seq_along(keys)) {\n  k <- keys[k]\n\n  locs <- str_locate_all(molecules, names(k))[[1]]\n\n  for (i in seq_len(nrow(locs))) {\n    new_mole <- molecules\n\n    str_sub(new_mole, locs[i, \"start\"], locs[i, \"end\"]) <- k[[1]]\n\n    res <- c(res, new_mole)\n  }\n}\n\nlength(unique(res))\n\n\n\n\n[1] 535\n0.067 sec elapsed\n\nPart 2\n\n\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(stringr)\n\ninput <- readLines(\"2015/19-input\")\n\nmolecules <- input[length(input)]\n\nkey <- input[-length(input)]\nkey <- key[key != \"\"]\n\nkey_tbl <- tibble(key) %>%\n  separate(key, c(\"from\", \"to\"), \" => \")\n\nrev_keys <- split(key_tbl$from, key_tbl$to)\ncount <- 0\n\nrepeat {\n  if (molecules == \"e\") break\n\n  r_key <- sample(rev_keys, 1)\n\n\n  if (str_detect(molecules, names(r_key))) {\n    count <- count + str_count(molecules, names(r_key))\n    molecules <- str_replace_all(molecules, names(r_key), r_key[[1]])\n  }\n\n}\n\ncount\n\n\n\n\n[1] 212\n0.029 sec elapsed\n\nDay 20\nPart 1\n\n\ninput <- 34000000\n\nlibrary(numbers)\n\ni <- 0\n\nrepeat {\n  i <- i + 1\n  if (sum(divisors(i)) * 10 >= input) break\n}\ni\n\n\n\n\n[1] 786240\n217.299 sec elapsed\n\nPart 2\n\n\ninput <- 34000000\n\nlibrary(numbers)\n\nregister <- numeric(input)\n\ni <- 0\n\nrepeat {\n  i <- i + 1\n\n  divs <- divisors(i)\n\n  register[divs] <- register[divs] + 1\n\n  if (sum((register[divs] <= 50) * divs) * 11 >= input) break\n\n}\ni\n\n\n\n\n[1] 831600\n237.767 sec elapsed\n\nDay 21\nPart 1\n\n\nweapon_tbl <- tibble::tribble(\n  ~Cost, ~Damage, ~Armor,\n  8,     4,       0,\n  10,    5,       0,\n  25,    6,       0,\n  40,    7,       0,\n  74,    8,       0\n)\n\narmor_tbl <- tibble::tribble(\n  ~Cost, ~Damage, ~Armor,\n  13,    0,       1,\n  31,    0,       2,\n  53,    0,       3,\n  75,    0,       4,\n  102,   0,       5,\n  0,     0,       0\n)\n\nring_tbl <- tibble::tribble(\n  ~Cost, ~Damage, ~Armor,\n  25,    1,       0,\n  50,    2,       0,\n  100,   3,       0,\n  20,    0,       1,\n  40,    0,       2,\n  80,    0,       3,\n  0,     0,       0\n)\n\nrings <- rbind(as.data.frame(t(combn(7, 2))), c(7, 7))\nnames(rings) <- c(\"ring1\", \"ring2\")\n\noutfits <- tidyr::expand_grid(rings,\n                              weapon = 1:5,\n                              armor = 1:6)\n\nbattle <- function(player_atk, player_armor, player_hp = 100,\n                   boss_hp = 103, boss_atk = 9, boss_armor = 2) {\n  repeat {\n    damage <- max(player_atk - boss_armor, 1)\n    boss_hp <- boss_hp - damage\n\n    if (boss_hp <= 0) return(TRUE)\n\n    damage <- max(boss_atk - player_armor, 1)\n    player_hp <- player_hp - damage\n\n    if (player_hp <= 0) return(FALSE)\n\n  }\n}\n\npre_battle <- function(ring1, ring2, weapon, armor) {\n  outfit <- dplyr::bind_rows(\n    ring_tbl[c(ring1, ring2), ],\n    weapon_tbl[weapon, ],\n    armor_tbl[armor, ]\n  )\n\n  if (battle(sum(outfit$Damage), sum(outfit$Armor))) {\n    return(sum(outfit$Cost))\n  } else {\n    return(NA)\n  }\n}\n\nmin(purrr::pmap_dbl(outfits, pre_battle), na.rm = TRUE)\n\n\n\n\n[1] 121\n0.189 sec elapsed\n\nPart 2\n\n\nweapon_tbl <- tibble::tribble(\n  ~Cost, ~Damage, ~Armor,\n  8,     4,       0,\n  10,    5,       0,\n  25,    6,       0,\n  40,    7,       0,\n  74,    8,       0\n)\n\narmor_tbl <- tibble::tribble(\n  ~Cost, ~Damage, ~Armor,\n  13,    0,       1,\n  31,    0,       2,\n  53,    0,       3,\n  75,    0,       4,\n  102,   0,       5,\n  0,     0,       0\n)\n\nring_tbl <- tibble::tribble(\n  ~Cost, ~Damage, ~Armor,\n  25,    1,       0,\n  50,    2,       0,\n  100,   3,       0,\n  20,    0,       1,\n  40,    0,       2,\n  80,    0,       3,\n  0,     0,       0\n)\n\nrings <- rbind(as.data.frame(t(combn(7, 2))), c(7, 7))\nnames(rings) <- c(\"ring1\", \"ring2\")\n\noutfits <- tidyr::expand_grid(rings,\n                              weapon = 1:5,\n                              armor = 1:6)\n\n\nbattle <- function(player_atk, player_armor, player_hp = 100,\n                   boss_hp = 103, boss_atk = 9, boss_armor = 2) {\n  repeat {\n    damage <- max(player_atk - boss_armor, 1)\n    boss_hp <- boss_hp - damage\n\n    if (boss_hp <= 0) return(TRUE)\n\n    damage <- max(boss_atk - player_armor, 1)\n    player_hp <- player_hp - damage\n\n    if (player_hp <= 0) return(FALSE)\n\n  }\n}\n\npre_battle <- function(ring1, ring2, weapon, armor) {\n  outfit <- dplyr::bind_rows(\n    ring_tbl[c(ring1, ring2), ],\n    weapon_tbl[weapon, ],\n    armor_tbl[armor, ]\n  )\n\n  if (battle(sum(outfit$Damage), sum(outfit$Armor))) {\n    return(NA)\n  } else {\n    return(sum(outfit$Cost))\n  }\n}\n\nmax(purrr::pmap_dbl(outfits, pre_battle), na.rm = TRUE)\n\n\n\n\n[1] 201\n0.268 sec elapsed\n\nDay 22\nDay 23\nPart 1\n\n\nlibrary(stringr)\nlibrary(magrittr)\nlibrary(bit64)\n\ninput <- readLines(\"2015/23-input\")\n\ncomputer <- function(a, b, input) {\n  loc <- 1\n  reg <- list(a = as.integer64(a), b = as.integer64(b))\n  repeat {\n    if (loc > length(input)) break\n    ins <- stringr::str_sub(input[loc], 1, 3)\n\n    if (ins == \"jio\") {\n      parts <- str_remove(input[loc], \".{4}\") %>%\n        str_split(\", \\\\+{0,1}\") %>%\n        .[[1]]\n\n      if (reg[[parts[1]]] == 1) {\n        loc <- loc + as.numeric(parts[2])\n      } else {\n        loc <- loc + 1\n      }\n\n    } else if (ins == \"inc\") {\n      regis_id <- str_remove(input[loc], \".{4}\")\n      reg[[regis_id]] <-reg[[regis_id]] + 1\n      loc <- loc + 1\n    } else if (ins == \"tpl\") {\n\n      regis_id <- str_remove(input[loc], \".{4}\")\n      reg[[regis_id]] <- reg[[regis_id]] * 3\n      loc <- loc + 1\n    } else if (ins == \"jmp\") {\n      offset <- str_remove(input[loc], \"jmp \\\\+{0,1}\")\n      loc <- loc + as.numeric(offset)\n    } else if (ins == \"jie\") {\n      parts <- str_remove(input[loc], \".{4}\") %>%\n        str_split(\", \\\\+{0,1}\") %>%\n        .[[1]]\n\n      if((reg[[parts[1]]] %% 2) == 0) {\n        loc <- loc + as.numeric(parts[2])\n      } else {\n        loc <- loc + 1\n      }\n    } else if (ins == \"hlf\") {\n      regis_id <- str_remove(input[loc], \".{4}\")\n      reg[[regis_id]] <- reg[[regis_id]] / 2\n      loc <- loc + 1\n    }\n  }\n\n  reg$b\n}\n\ncomputer(0, 0, input)\n\n\n\n\ninteger64\n[1] 255\n0.222 sec elapsed\n\nPart 2\n\n\nlibrary(stringr)\nlibrary(magrittr)\nlibrary(bit64)\n\ninput <- readLines(\"2015/23-input\")\n\ncomputer <- function(a, b, input) {\n  loc <- 1\n  reg <- list(a = as.integer64(a), b = as.integer64(b))\n  repeat {\n    if (loc > length(input)) break\n    ins <- stringr::str_sub(input[loc], 1, 3)\n\n    if (ins == \"jio\") {\n      parts <- str_remove(input[loc], \".{4}\") %>%\n        str_split(\", \\\\+{0,1}\") %>%\n        .[[1]]\n\n      if (reg[[parts[1]]] == 1) {\n        loc <- loc + as.numeric(parts[2])\n      } else {\n        loc <- loc + 1\n      }\n\n    } else if (ins == \"inc\") {\n      regis_id <- str_remove(input[loc], \".{4}\")\n      reg[[regis_id]] <-reg[[regis_id]] + 1\n      loc <- loc + 1\n    } else if (ins == \"tpl\") {\n\n      regis_id <- str_remove(input[loc], \".{4}\")\n      reg[[regis_id]] <- reg[[regis_id]] * 3\n      loc <- loc + 1\n    } else if (ins == \"jmp\") {\n      offset <- str_remove(input[loc], \"jmp \\\\+{0,1}\")\n      loc <- loc + as.numeric(offset)\n    } else if (ins == \"jie\") {\n      parts <- str_remove(input[loc], \".{4}\") %>%\n        str_split(\", \\\\+{0,1}\") %>%\n        .[[1]]\n\n      if((reg[[parts[1]]] %% 2) == 0) {\n        loc <- loc + as.numeric(parts[2])\n      } else {\n        loc <- loc + 1\n      }\n    } else if (ins == \"hlf\") {\n      regis_id <- str_remove(input[loc], \".{4}\")\n      reg[[regis_id]] <- reg[[regis_id]] / 2\n      loc <- loc + 1\n    }\n  }\n\n  reg$b\n}\n\ncomputer(1, 0, input)\n\n\n\n\ninteger64\n[1] 334\n0.259 sec elapsed\n\nDay 24\nPart 1\n\n\ninput <- as.numeric(readLines(\"2015/24-input\"))\n\ntotal <- sum(input) / 3\n\nsplit_vec <- function(input, total) {\n  res <- list()\n  for (i in seq_along(input)) {\n    combs <- combn(input, i)\n    colsum_combs <- colSums(combs)\n    if (any(colsum_combs == total)) {\n      res <- c(res, list(combs[, which(colsum_combs == total)]))\n      break\n    }\n  }\n  res\n}\n\nfirst_group <- split_vec(input, total)\n\nsplit_vec(setdiff(input, first_group[[1]][, 1]), total)\n\norder(apply(first_group[[1]], 2, prod))\n\nprod(first_group[[1]][, 1])\n\n\n\n\n[1] 10439961859\n1.288 sec elapsed\n\nPart 2\n\n\ninput <- as.numeric(readLines(\"2015/24-input\"))\n\ntotal <- sum(input) / 4\n\nsplit_vec <- function(input, total) {\n  res <- list()\n  for (i in seq_along(input)) {\n    combs <- combn(input, i)\n    colsum_combs <- colSums(combs)\n    if (any(colsum_combs == total)) {\n      res <- c(res, list(combs[, which(colsum_combs == total)]))\n      break\n    }\n  }\n  res\n}\n\nfirst_group <- split_vec(input, total)\n\nsplit_vec(setdiff(input, first_group[[1]][, 1]), total)\n\norder(apply(first_group[[1]], 2, prod))\n\nprod(first_group[[1]][, 1])\n\n\n\n\n[1] 72050269\n0.155 sec elapsed\n\nDay 25\nPart 1\n\n\nvalue <- 20151125\n\nx <- 1\ny <- 1\n\nrepeat {\n  if (y == 1) {\n    y <- x + 1\n    x <- 1\n  } else {\n    y <- y - 1\n    x <- x + 1\n  }\n  value <- (value * 252533) %% 33554393\n  if (x == 3075 & y == 2981) break\n}\n\nvalue\n\n\n\n\n[1] 9132360\n6.379 sec elapsed\n\n\n\n\n\n",
      "last_modified": "2021-11-23T20:19:45-08:00"
    },
    {
      "path": "about.html",
      "title": "About this site",
      "description": "Some additional details about the website",
      "author": [],
      "contents": "\n\n\n\n",
      "last_modified": "2021-11-23T20:19:45-08:00"
    },
    {
      "path": "index.html",
      "title": "R Advent Of Code",
      "description": "Welcome to the website. I hope you enjoy it!\n",
      "author": [],
      "contents": "\n\n\n\n",
      "last_modified": "2021-11-23T20:19:46-08:00"
    }
  ],
  "collections": []
}
